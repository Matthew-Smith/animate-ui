{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "liquid-button",
  "type": "registry:ui",
  "title": "Liquid Button",
  "description": "A clickable button featuring a dynamic, fluid-like animation effect upon hover, creating an engaging, liquid-inspired interaction.",
  "dependencies": [
    "motion",
    "class-variance-authority"
  ],
  "files": [
    {
      "path": "registry/buttons/liquid/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type HTMLMotionProps } from 'motion/react';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst buttonVariants = cva(\n  \"relative inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-lg text-sm font-medium cursor-pointer overflow-hidden disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive [background:_linear-gradient(var(--liquid-button-color)_0_0)_no-repeat_calc(200%-var(--liquid-button-fill,0%))_100%/200%_var(--liquid-button-fill,0.2em)] hover:[--liquid-button-fill:100%] hover:[--liquid-button-delay:0.3s] [transition:_background_0.3s_var(--liquid-button-delay,0s),_color_0.3s_var(--liquid-button-delay,0s),_background-position_0.3s_calc(0.3s_-_var(--liquid-button-delay,0s))] focus:outline-none\",\n  {\n    variants: {\n      variant: {\n        default:\n          'text-primary hover:text-primary-foreground !bg-muted [--liquid-button-color:var(--primary)]',\n        outline:\n          'border !bg-background dark:!bg-input/30 dark:border-input [--liquid-button-color:var(--primary)]',\n        secondary:\n          'text-secondary hover:text-secondary-foreground !bg-muted [--liquid-button-color:var(--secondary)]',\n      },\n      size: {\n        default: 'h-10 px-4 py-2 has-[>svg]:px-3',\n        sm: 'h-9 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5',\n        lg: 'h-12 rounded-xl px-8 has-[>svg]:px-6',\n        icon: 'size-10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n);\n\ntype LiquidButtonProps = HTMLMotionProps<'button'> &\n  VariantProps<typeof buttonVariants>;\n\nfunction LiquidButton({\n  className,\n  variant,\n  size,\n  ...props\n}: LiquidButtonProps) {\n  return (\n    <motion.button\n      whileTap={{ scale: 0.95 }}\n      whileHover={{ scale: 1.05 }}\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  );\n}\n\nexport { LiquidButton, type LiquidButtonProps };\n",
      "type": "registry:ui",
      "target": "components/animate-ui/buttons/liquid.tsx"
    }
  ]
}